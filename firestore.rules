rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - all authenticated users can read/write
    match /users/{userId} {
      // Allow all authenticated users to read/write user documents
      // This is needed for admin creation and user management
      allow read, write: if request.auth != null;
      
      // Only users can delete their own accounts
      allow delete: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    // Shifts collection - authenticated users can read and update
    match /shifts/{shiftId} {
      allow read: if request.auth != null;
      
      // Allow all authenticated users to update shifts (for shift pickup)
      // This is needed for staff to pick up shifts
      allow update: if request.auth != null;
      
      // Only admins and managers can create/delete shifts
      allow create, delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // Leave requests - all authenticated users can read/write
    match /leaveRequests/{requestId} {
      allow read, write: if request.auth != null;
    }
    
    // Leaves collection - all authenticated users can read/write
    match /leaves/{leaveId} {
      allow read, write: if request.auth != null;
    }
    
    // Notifications - users can read their own, all authenticated users can write
    match /notifications/{notificationId} {
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Allow all authenticated users to write notifications
      // This is needed for system notifications and shift pickup notifications
      allow write: if request.auth != null;
    }
    
    // Analytics - all authenticated users can read, only admins can write
    match /analytics/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // System settings - all authenticated users can read, only admins can write
    match /settings/{document} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Chat messages - authenticated users can read/write
    match /chatMessages/{messageId} {
      allow read, write: if request.auth != null;
      allow delete: if request.auth != null && 
        (resource.data.senderId == request.auth.uid || 
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Admin requests - all authenticated users can read/write
    match /adminRequests/{requestId} {
      allow read, write: if request.auth != null;
    }
    
    // Shift swaps - all authenticated users can read/write
    match /shiftSwaps/{swapId} {
      allow read, write: if request.auth != null;
    }
    
    // User activities - all authenticated users can read/write
    match /user_activities/{userId} {
      allow read, write: if request.auth != null;
    }
  }
}
